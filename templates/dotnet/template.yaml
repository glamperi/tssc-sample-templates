apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: create-devspaces-dotnet-api
  title: Create DevSpaces Workspace for .NET API - 29
  description: Clones repo to GitLab and starts DevSpaces workspace
spec:
  owner: user1
  type: service
  parameters:
    - title: Repo Information
      required: [githubRepoUrl, gitlabHost, repoOwner, repoName]
      properties:
        githubRepoUrl:
          type: string
          title: GitHub Source Repository (URL)
          default: https://github.com/glamperi/devspaces-dotnet-web-api-sample.git
        gitlabHost:
          type: string
          title: GitLab Host (no protocol)
          default: gitlab-gitlab.apps.cluster-vnfjq.vnfjq.sandbox1957.opentlc.com
        repoOwner:
          type: string
          title: GitLab Owner / Namespace
          default: user1
        repoName:
          type: string
          title: GitLab Repository Name
          default: devspaces-dotnet-web-api-sample

  steps:
    - id: fetch-template
      name: Clone GitHub Repo
      action: fetch:plain
      input:
        url: ${{ parameters.githubRepoUrl }}

    - id: push-to-gitlab
      name: Push to GitLab
      action: publish:gitlab
      input:
        repoUrl: ${{ parameters.gitlabHost }}?owner=${{ parameters.repoOwner }}&repo=${{ parameters.repoName }}
        defaultBranch: main
        gitAuthorName: "DevHub Automation"
        gitAuthorEmail: "devhub@example.com"

    - id: generate-links
      name: Generate Output URLs
      action: run:script
      input:
        script: |
          const gitlabUrl = `https://${parameters.gitlabHost}/${parameters.repoOwner}/${parameters.repoName}`;
          const devspacesBaseUrl = `https://devspaces.apps.${parameters.gitlabHost.split('.').slice(1).join('.')}`;
          const encoded = Buffer.from(gitlabUrl).toString('base64');
          const devspacesUrl = `${devspacesBaseUrl}/#${encoded}`;
          return {
            gitlabRepoUrl: gitlabUrl,
            devspacesUrl
          };

    - id: log-links
      name: Log the links
      action: debug:log
      input:
        message: |
          GitLab URL: ${{ steps.generate-links.output.gitlabRepoUrl }}
          DevSpaces URL: ${{ steps.generate-links.output.devspacesUrl }}

  output:
    links:
      - title: GitLab Repository
        url: "${{ steps.generate-links.output.gitlabRepoUrl }}"
      - title: Open in DevSpaces
        url: "${{ steps.generate-links.output.devspacesUrl }}"
